/*
Core API

Front is a customer operations platform that enables support, sales, and account management teams to deliver exceptional service at scale. Front streamlines customer communication by combining the efficiency of a help desk and the familiarity of email, with automated workflows and real-time collaboration behind the scenes.

With Front, teams can centralize messages across channels, route them to the right person, and unlock visibility and insights across all of their customer operations. More than 8000 businesses use Front to drive operational efficiency that prevents churn, improves retention, and propels customer growth.

The version of the OpenAPI document: 1.0.0


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { ConversationResponseLinks } from './conversation-response-links';
import { ConversationResponseMetadata } from './conversation-response-metadata';
import { LinkResponse } from './link-response';
import { RecipientResponse } from './recipient-response';
import { Reminder } from './reminder';
import { TagResponse } from './tag-response';
import { TeammateResponse } from './teammate-response';

/**
 * 
 * @export
 * @interface ConversationResponse
 */
export interface ConversationResponse {
    /**
     * List of the tags for this conversation
     * @type {Array<TagResponse>}
     * @memberof ConversationResponse
     */
    'tags'?: Array<TagResponse>;
    /**
     * 
     * @type {ConversationResponseLinks}
     * @memberof ConversationResponse
     */
    '_links'?: ConversationResponseLinks;
    /**
     * Unique identifier of the conversation
     * @type {string}
     * @memberof ConversationResponse
     */
    'id'?: string;
    /**
     * Subject of the message for email message
     * @type {string}
     * @memberof ConversationResponse
     */
    'subject'?: string;
    /**
     * Status of the conversation
     * @type {string}
     * @memberof ConversationResponse
     */
    'status'?: ConversationResponseStatusEnum;
    /**
     * 
     * @type {TeammateResponse}
     * @memberof ConversationResponse
     */
    'assignee'?: TeammateResponse;
    /**
     * 
     * @type {RecipientResponse}
     * @memberof ConversationResponse
     */
    'recipient'?: RecipientResponse;
    /**
     * List of the links for this conversation
     * @type {Array<LinkResponse>}
     * @memberof ConversationResponse
     */
    'links'?: Array<LinkResponse>;
    /**
     * Custom field attributes for this conversation
     * @type {object}
     * @memberof ConversationResponse
     */
    'custom_fields'?: object;
    /**
     * Timestamp at which the conversation have been created.
     * @type {number}
     * @memberof ConversationResponse
     */
    'created_at'?: number;
    /**
     * Timestamp of the oldest unreplied message.
     * @type {number}
     * @memberof ConversationResponse
     */
    'waiting_since'?: number;
    /**
     * Whether or not the conversation is private
     * @type {boolean}
     * @memberof ConversationResponse
     */
    'is_private'?: boolean;
    /**
     * List of scheduled (non-expired and non-canceled) reminders for this conversation
     * @type {Array<Reminder>}
     * @memberof ConversationResponse
     */
    'scheduled_reminders'?: Array<Reminder>;
    /**
     * 
     * @type {ConversationResponseMetadata}
     * @memberof ConversationResponse
     */
    'metadata'?: ConversationResponseMetadata;
}

type ConversationResponseStatusEnum = 'archived' | 'unassigned' | 'deleted' | 'assigned'


