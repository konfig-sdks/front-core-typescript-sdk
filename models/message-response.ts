/*
Core API

Front is a customer operations platform that enables support, sales, and account management teams to deliver exceptional service at scale. Front streamlines customer communication by combining the efficiency of a help desk and the familiarity of email, with automated workflows and real-time collaboration behind the scenes.

With Front, teams can centralize messages across channels, route them to the right person, and unlock visibility and insights across all of their customer operations. More than 8000 businesses use Front to drive operational efficiency that prevents churn, improves retention, and propels customer growth.

The version of the OpenAPI document: 1.0.0


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { Attachment } from './attachment';
import { MessageResponseLinks } from './message-response-links';
import { MessageResponseMetadata } from './message-response-metadata';
import { RecipientResponse } from './recipient-response';
import { SignatureResponse } from './signature-response';
import { TeammateResponse } from './teammate-response';

/**
 * 
 * @export
 * @interface MessageResponse
 */
export interface MessageResponse {
    /**
     * The current version of the message in Front
     * @type {string}
     * @memberof MessageResponse
     */
    'version'?: string;
    /**
     * 
     * @type {MessageResponseLinks}
     * @memberof MessageResponse
     */
    '_links'?: MessageResponseLinks;
    /**
     * Unique identifier of the message
     * @type {string}
     * @memberof MessageResponse
     */
    'id'?: string;
    /**
     * Type of the message
     * @type {string}
     * @memberof MessageResponse
     */
    'type'?: MessageResponseTypeEnum;
    /**
     * Whether or not the message has been received or sent
     * @type {boolean}
     * @memberof MessageResponse
     */
    'is_inbound'?: boolean;
    /**
     * If the message is a draft, describes the draft mode. Can be \'private\' (draft is visible to the author only) or \'shared\' (draft is visible to all teammates with access to the conversation).
     * @type {string}
     * @memberof MessageResponse
     */
    'draft_mode'?: MessageResponseDraftModeEnum;
    /**
     * Type of the error when the draft failed to be sent
     * @type {string}
     * @memberof MessageResponse
     */
    'error_type'?: string;
    /**
     * Date at which the message as been sent or received
     * @type {number}
     * @memberof MessageResponse
     */
    'created_at'?: number;
    /**
     * Subject of the message
     * @type {string}
     * @memberof MessageResponse
     */
    'subject'?: string;
    /**
     * Preview of the message body
     * @type {string}
     * @memberof MessageResponse
     */
    'blurb'?: string;
    /**
     * 
     * @type {TeammateResponse}
     * @memberof MessageResponse
     */
    'author'?: TeammateResponse;
    /**
     * 
     * @type {Array<RecipientResponse>}
     * @memberof MessageResponse
     */
    'recipients'?: Array<RecipientResponse>;
    /**
     * Body of the message
     * @type {string}
     * @memberof MessageResponse
     */
    'body'?: string;
    /**
     * Text version of the body for email messages
     * @type {string}
     * @memberof MessageResponse
     */
    'text'?: string;
    /**
     * List of files attached to the message
     * @type {Array<Attachment>}
     * @memberof MessageResponse
     */
    'attachments'?: Array<Attachment>;
    /**
     * 
     * @type {SignatureResponse}
     * @memberof MessageResponse
     */
    'signature'?: SignatureResponse;
    /**
     * 
     * @type {MessageResponseMetadata}
     * @memberof MessageResponse
     */
    'metadata'?: MessageResponseMetadata;
}

type MessageResponseTypeEnum = 'call' | 'custom' | 'email' | 'facebook' | 'front_chat' | 'googleplay' | 'intercom' | 'internal' | 'phone-call' | 'sms' | 'smooch' | 'tweet' | 'tweet_dm' | 'whatsapp' | 'yalo_wha'
type MessageResponseDraftModeEnum = 'shared' | 'private'


