/*
Core API

Front is a customer operations platform that enables support, sales, and account management teams to deliver exceptional service at scale. Front streamlines customer communication by combining the efficiency of a help desk and the familiarity of email, with automated workflows and real-time collaboration behind the scenes.

With Front, teams can centralize messages across channels, route them to the right person, and unlock visibility and insights across all of their customer operations. More than 8000 businesses use Front to drive operational efficiency that prevents churn, improves retention, and propels customer growth.

The version of the OpenAPI document: 1.0.0


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { ImportMessageMetadata } from './import-message-metadata';
import { ImportMessageSender } from './import-message-sender';

/**
 * 
 * @export
 * @interface ImportMessage
 */
export interface ImportMessage {
    /**
     * List of tag names to add to the conversation
     * @type {Array<string>}
     * @memberof ImportMessage
     */
    'tags'?: Array<string>;
    /**
     * 
     * @type {ImportMessageSender}
     * @memberof ImportMessage
     */
    'sender': ImportMessageSender;
    /**
     * List of the recipient handles who will receive this message
     * @type {Array<string>}
     * @memberof ImportMessage
     */
    'to': Array<string>;
    /**
     * List of the recipient handles who will receive a copy of this message
     * @type {Array<string>}
     * @memberof ImportMessage
     */
    'cc'?: Array<string>;
    /**
     * List of the recipient handles who will receive a blind copy of this message
     * @type {Array<string>}
     * @memberof ImportMessage
     */
    'bcc'?: Array<string>;
    /**
     * Subject of the message
     * @type {string}
     * @memberof ImportMessage
     */
    'subject'?: string;
    /**
     * Body of the message
     * @type {string}
     * @memberof ImportMessage
     */
    'body': string;
    /**
     * Format of the message body. Can be `markdown` (default) or `html`, and can only be specified for `email` type.
     * @type {string}
     * @memberof ImportMessage
     */
    'body_format'?: ImportMessageBodyFormatEnum;
    /**
     * External identifier of the message. Front won\'t import two messages with the same external ID.
     * @type {string}
     * @memberof ImportMessage
     */
    'external_id': string;
    /**
     * Date at which the message as been sent or received.
     * @type {number}
     * @memberof ImportMessage
     */
    'created_at': number;
    /**
     * Type of the message to import. Default is `email`.
     * @type {string}
     * @memberof ImportMessage
     */
    'type'?: ImportMessageTypeEnum;
    /**
     * ID of the teammate who will be assigned to the conversation.
     * @type {string}
     * @memberof ImportMessage
     */
    'assignee_id'?: string;
    /**
     * If supplied, Front will thread this message into conversation with the given ID. Note that including this parameter nullifies the `thread_ref` parameter _completely_.
     * @type {string}
     * @memberof ImportMessage
     */
    'conversation_id'?: string;
    /**
     * 
     * @type {ImportMessageMetadata}
     * @memberof ImportMessage
     */
    'metadata': ImportMessageMetadata;
    /**
     * Binary data of attached files. Must use `Content-Type: multipart/form-data` if specified. See [example](https://gist.github.com/hdornier/e04d04921032e98271f46ff8a539a4cb) or read more about [Attachments](https://dev.frontapp.com/docs/attachments-1).  Max 25 MB.
     * @type {Array<Uint8Array | File | buffer.File>}
     * @memberof ImportMessage
     */
    'attachments'?: Array<Uint8Array | File | buffer.File>;
}

type ImportMessageBodyFormatEnum = 'html' | 'markdown'
type ImportMessageTypeEnum = 'email' | 'sms' | 'intercom' | 'custom'


